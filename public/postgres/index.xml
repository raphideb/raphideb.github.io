<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PostgreSQL on raphi&#39;s corner</title>
    <link>//localhost:1313/postgres/</link>
    <description>Recent content in PostgreSQL on raphi&#39;s corner</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="//localhost:1313/postgres/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>pgbench</title>
      <link>//localhost:1313/postgres/pgbench/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/postgres/pgbench/</guid>
      <description>&lt;h2 id=&#34;the-postgresql-benchmark-utility&#34;&gt;The PostgreSQL benchmark utility&lt;/h2&gt;&#xA;&lt;img class=&#34;floatimg&#34; src=&#34;//localhost:1313/postgres/pgbench.jpg&#34; alt=&#34;elephant&#34; width=&#34;25%&#34; height=&#34;25%&#34;/&gt;&#xA;&lt;br&gt;&lt;br&gt;&#xA;&lt;p&gt;Including a benchmark utility with a database product demonstrates a strong commitment to performance and transparency. For PostgreSQL, the built-in tool is pgbench, which allows users to test various aspects of the database system. Not only that, it can also run benchmarks on any set of tables with any script that you created yourself, making it the perfect tool to benchmark a specific application workload.&#xA;&lt;p&gt;The official documentation is here: &lt;a href=&#34;https://www.postgresql.org/docs/current/pgbench.html&#34;&gt;https://www.postgresql.org/docs/current/pgbench.html&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>pgstat_snap</title>
      <link>//localhost:1313/postgres/pgstat_snap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/postgres/pgstat_snap/</guid>
      <description>&lt;h1 id=&#34;purpose-of-this-script&#34;&gt;Purpose of this script&lt;/h1&gt;&#xA;&lt;p&gt;The cumulative statistics system (CSS) in PostgreSQL and pg_stat_statements in particular lack any timing information, all values are cumulative and the only way to figure out the difference between query executions is to reset the stats every time or work with averages.&lt;/p&gt;&#xA;&lt;p&gt;With the pgstat_snap extension, you can create timestamped snapshots of pg_stat_statements and pg_stat_activity when needed. It also provides views that show the difference between every snapshot for every query and database.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
